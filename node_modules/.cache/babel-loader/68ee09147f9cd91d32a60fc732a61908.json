{"ast":null,"code":"var _jsxFileName = \"/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { inputData } from \"../hooks/input-data\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const isNotEmpty = value => value ? value.trim() !== \"\" : \"\";\n\n  console.log(isNotEmpty(\"\"));\n  const regEx = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/g;\n\n  const isEmail = value => regEx.test(value);\n\n  const {\n    isValid: firstNameIsValid\n  } = useInput(isNotEmpty);\n  console.log(useInput(isNotEmpty));\n  const {\n    isValid: lastNameIsValid\n  } = useInput(isNotEmpty); // const {\n  //   value: emailValue,\n  //   isValid: emailIsValid,\n  //   hasError: emailHasError,\n  //   valueChangeHandler: emailChangeHandler,\n  //   inputBlurHandler: emailBlurHandler,\n  //   reset: resetEmail,\n  // } = useInput(isEmail);\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log(\"Sumbitted!\");\n    console.log(firstNameValue, lastNameValue, emailValue);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }; // const firstNameClasses = firstNameHasError\n  //   ? \"form-control invalid\"\n  //   : \"form-control\";\n  // const lastNameClasses = lastNameHasError\n  //   ? \"form-control invalid\"\n  //   : \"form-control\";\n  // const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  // const inputData = [\n  //   {\n  //     className: firstNameClasses,\n  //     id: \"fname\",\n  //     type: \"text\",\n  //     value: firstNameValue,\n  //     content: \"First Name\",\n  //     onChange: firstNameChangeHandler,\n  //     onBlur: firstNameBlurHandler,\n  //     hasError: firstNameHasError,\n  //     par: \"Please enter a first name.\",\n  //   },\n  //   {\n  //     className: lastNameClasses,\n  //     id: \"lname\",\n  //     type: \"text\",\n  //     value: lastNameValue,\n  //     content: \"Last Name\",\n  //     onChange: lastNameChangeHandler,\n  //     onBlur: lastNameBlurHandler,\n  //     hasError: lastNameHasError,\n  //     par: \"Please enter a last name.\",\n  //   },\n  //   {\n  //     className: emailClasses,\n  //     id: \"email\",\n  //     type: \"text\",\n  //     value: emailValue,\n  //     content: \"E-Mail Address\",\n  //     onChange: emailChangeHandler,\n  //     onBlur: emailBlurHandler,\n  //     hasError: emailHasError,\n  //     par: \"Please enter an email address.\",\n  //   },\n  // ];\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: inputData.map(inputEl => /*#__PURE__*/_jsxDEV(Input, {\n        className: inputEl.className,\n        id: inputEl.id,\n        type: inputEl.type,\n        value: inputEl.value,\n        content: inputEl.content,\n        onChange: inputEl.onChange,\n        onBlur: inputEl.onBlur,\n        hasError: inputEl.hasError,\n        par: inputEl.par\n      }, inputEl.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"YnZw8KP5h0yIhZAqo1MD7eF0fDQ=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","inputData","Input","BasicForm","props","isNotEmpty","value","trim","console","log","regEx","isEmail","test","isValid","firstNameIsValid","lastNameIsValid","formIsValid","emailIsValid","submitHandler","event","preventDefault","firstNameValue","lastNameValue","emailValue","resetFirstName","resetLastName","resetEmail","map","inputEl","className","id","type","content","onChange","onBlur","hasError","par"],"sources":["/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\nimport {inputData} from \"../hooks/input-data\";\nimport Input from \"./Input\";\n\nconst BasicForm = (props) => {\n  const isNotEmpty = (value) => (value ? value.trim() !== \"\" : \"\");\n  console.log(isNotEmpty(\"\"));\n\n  const regEx = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/g;\n  const isEmail = (value) => regEx.test(value);\n\n  const {\n    isValid: firstNameIsValid,\n  } = useInput(isNotEmpty);\n  console.log(useInput(isNotEmpty));\n\n  const {\n    isValid: lastNameIsValid,\n  } = useInput(isNotEmpty);\n\n  // const {\n  //   value: emailValue,\n  //   isValid: emailIsValid,\n  //   hasError: emailHasError,\n  //   valueChangeHandler: emailChangeHandler,\n  //   inputBlurHandler: emailBlurHandler,\n  //   reset: resetEmail,\n  // } = useInput(isEmail);\n\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log(\"Sumbitted!\");\n    console.log(firstNameValue, lastNameValue, emailValue);\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  // const firstNameClasses = firstNameHasError\n  //   ? \"form-control invalid\"\n  //   : \"form-control\";\n  // const lastNameClasses = lastNameHasError\n  //   ? \"form-control invalid\"\n  //   : \"form-control\";\n  // const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n\n  // const inputData = [\n  //   {\n  //     className: firstNameClasses,\n  //     id: \"fname\",\n  //     type: \"text\",\n  //     value: firstNameValue,\n  //     content: \"First Name\",\n  //     onChange: firstNameChangeHandler,\n  //     onBlur: firstNameBlurHandler,\n  //     hasError: firstNameHasError,\n  //     par: \"Please enter a first name.\",\n  //   },\n  //   {\n  //     className: lastNameClasses,\n  //     id: \"lname\",\n  //     type: \"text\",\n  //     value: lastNameValue,\n  //     content: \"Last Name\",\n  //     onChange: lastNameChangeHandler,\n  //     onBlur: lastNameBlurHandler,\n  //     hasError: lastNameHasError,\n  //     par: \"Please enter a last name.\",\n  //   },\n  //   {\n  //     className: emailClasses,\n  //     id: \"email\",\n  //     type: \"text\",\n  //     value: emailValue,\n  //     content: \"E-Mail Address\",\n  //     onChange: emailChangeHandler,\n  //     onBlur: emailBlurHandler,\n  //     hasError: emailHasError,\n  //     par: \"Please enter an email address.\",\n  //   },\n  // ];\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        {inputData.map((inputEl) => (\n          <Input\n            key={inputEl.id}\n            className={inputEl.className}\n            id={inputEl.id}\n            type={inputEl.type}\n            value={inputEl.value}\n            content={inputEl.content}\n            onChange={inputEl.onChange}\n            onBlur={inputEl.onBlur}\n            hasError={inputEl.hasError}\n            par={inputEl.par}\n          />\n        ))}\n      </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,UAAU,GAAIC,KAAD,IAAYA,KAAK,GAAGA,KAAK,CAACC,IAAN,OAAiB,EAApB,GAAyB,EAA7D;;EACAC,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAAC,EAAD,CAAtB;EAEA,MAAMK,KAAK,GAAG,0DAAd;;EACA,MAAMC,OAAO,GAAIL,KAAD,IAAWI,KAAK,CAACE,IAAN,CAAWN,KAAX,CAA3B;;EAEA,MAAM;IACJO,OAAO,EAAEC;EADL,IAEFd,QAAQ,CAACK,UAAD,CAFZ;EAGAG,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACK,UAAD,CAApB;EAEA,MAAM;IACJQ,OAAO,EAAEE;EADL,IAEFf,QAAQ,CAACK,UAAD,CAFZ,CAZ2B,CAgB3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,IAAIW,WAAW,GAAG,KAAlB;;EAEA,IAAIF,gBAAgB,IAAIC,eAApB,IAAuCE,YAA3C,EAAyD;IACvDD,WAAW,GAAG,IAAd;EACD;;EAED,MAAME,aAAa,GAAIC,KAAD,IAAW;IAC/BA,KAAK,CAACC,cAAN;;IACA,IAAI,CAACJ,WAAL,EAAkB;MAChB;IACD;;IAEDR,OAAO,CAACC,GAAR,CAAY,YAAZ;IACAD,OAAO,CAACC,GAAR,CAAYY,cAAZ,EAA4BC,aAA5B,EAA2CC,UAA3C;IAEAC,cAAc;IACdC,aAAa;IACbC,UAAU;EACX,CAZD,CAhC2B,CA8C3B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAM,QAAQ,EAAER,aAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,eAAf;MAAA,UACGjB,SAAS,CAAC0B,GAAV,CAAeC,OAAD,iBACb,QAAC,KAAD;QAEE,SAAS,EAAEA,OAAO,CAACC,SAFrB;QAGE,EAAE,EAAED,OAAO,CAACE,EAHd;QAIE,IAAI,EAAEF,OAAO,CAACG,IAJhB;QAKE,KAAK,EAAEH,OAAO,CAACtB,KALjB;QAME,OAAO,EAAEsB,OAAO,CAACI,OANnB;QAOE,QAAQ,EAAEJ,OAAO,CAACK,QAPpB;QAQE,MAAM,EAAEL,OAAO,CAACM,MARlB;QASE,QAAQ,EAAEN,OAAO,CAACO,QATpB;QAUE,GAAG,EAAEP,OAAO,CAACQ;MAVf,GACOR,OAAO,CAACE,EADf;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAkBE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACd,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAlHD;;GAAMb,S;UASAH,Q,EACQA,Q,EAIRA,Q;;;KAdAG,S;AAoHN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const regEx = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/g; //call useInput and extract values by extracting keys\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => regEx.test(value));\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    //because we don't want the request to be sent yet (freeze the default behavior)\n    //so page won't be reloaded\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"AanX4t+gpBZZAMPHHkoVWhOOxYM=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","regEx","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","test","emailInputIsInvalid","enteredEmailTouched","formIsValid","emailInputChangeHandler","event","setEnteredEmail","target","emailInputBlurHandler","setEnteredEmailTouched","formSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses","nameChangedHandler"],"sources":["/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react'\nimport useInput from '../hooks/use-input';\n\n\n\nconst SimpleInput = (props) => {\n  const regEx = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/g;\n\n\n  //call useInput and extract values by extracting keys\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '')\n\n\nconst {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => regEx.test(value))\n\n  \n\n\n\n\n\n  \n\n  \n\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched\n\n  let formIsValid = false\n\n  if (enteredNameIsValid && enteredEmailIsValid){\n    formIsValid = true\n  }\n\n\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value)\n  }\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true)\n\n  }\n\n \n\n  const formSubmissionHandler = (event) => {\n    //because we don't want the request to be sent yet (freeze the default behavior)\n    //so page won't be reloaded\n    event.preventDefault()\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return\n    }\n    resetNameInput()\n    setEnteredEmail('')\n    setEnteredEmailTouched(false)\n  }\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control'\n\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          />\n          {nameInputHasError && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='email' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n          />\n          {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
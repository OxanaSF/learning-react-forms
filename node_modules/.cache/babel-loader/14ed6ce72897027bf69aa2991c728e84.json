{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\n\nconst InputData = props => {\n  _s();\n\n  const isNotEmpty = value => value ? value.trim() !== \"\" : \"\";\n\n  console.log(isNotEmpty(\"\"));\n  const regEx = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/g;\n\n  const isEmail = value => regEx.test(value);\n\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  console.log(useInput(isNotEmpty));\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail); //   let formIsValid = false;\n  //   if (lastNameIsValid && emailIsValid) {\n  //     formIsValid = true;\n  //   }\n  //   const submitHandler = (event) => {\n  //     event.preventDefault();\n  //     if (!formIsValid) {\n  //       return;\n  //     }\n  //     console.log(\"Sumbitted!\");\n  //     console.log(firstNameValue, lastNameValue, emailValue);\n  //     resetFirstName();\n  //     resetLastName();\n  //     resetEmail();\n  //   };\n\n  const firstNameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  const inputData = [{\n    className: firstNameClasses,\n    id: \"fname\",\n    type: \"text\",\n    value: firstNameValue,\n    content: \"First Name\",\n    onChange: firstNameChangeHandler,\n    onBlur: firstNameBlurHandler,\n    hasError: firstNameHasError,\n    par: \"Please enter a first name.\"\n  }, {\n    className: lastNameClasses,\n    id: \"lname\",\n    type: \"text\",\n    value: lastNameValue,\n    content: \"Last Name\",\n    onChange: lastNameChangeHandler,\n    onBlur: lastNameBlurHandler,\n    hasError: lastNameHasError,\n    par: \"Please enter a last name.\"\n  }, {\n    className: emailClasses,\n    id: \"email\",\n    type: \"text\",\n    value: emailValue,\n    content: \"E-Mail Address\",\n    onChange: emailChangeHandler,\n    onBlur: emailBlurHandler,\n    hasError: emailHasError,\n    par: \"Please enter an email address.\"\n  }];\n  return {\n    inputData\n  };\n};\n\n_s(InputData, \"jdwwFtHIQCpsnNfGwKgUdBjex0I=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = InputData;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputData\");","map":{"version":3,"names":["useInput","InputData","props","isNotEmpty","value","trim","console","log","regEx","isEmail","test","firstNameValue","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","firstNameClasses","lastNameClasses","emailClasses","inputData","className","id","type","content","onChange","onBlur","par"],"sources":["/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/hooks/input-data.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst InputData = (props) => {\n  const isNotEmpty = (value) => (value ? value.trim() !== \"\" : \"\");\n  console.log(isNotEmpty(\"\"));\n\n  const regEx = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/g;\n  const isEmail = (value) => regEx.test(value);\n\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n  console.log(useInput(isNotEmpty));\n\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(isEmail);\n\n//   let formIsValid = false;\n\n//   if (lastNameIsValid && emailIsValid) {\n//     formIsValid = true;\n//   }\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     if (!formIsValid) {\n//       return;\n//     }\n\n//     console.log(\"Sumbitted!\");\n//     console.log(firstNameValue, lastNameValue, emailValue);\n\n//     resetFirstName();\n//     resetLastName();\n//     resetEmail();\n//   };\n\n  const firstNameClasses = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n\n  const inputData = [\n    {\n      className: firstNameClasses,\n      id: \"fname\",\n      type: \"text\",\n      value: firstNameValue,\n      content: \"First Name\",\n      onChange: firstNameChangeHandler,\n      onBlur: firstNameBlurHandler,\n      hasError: firstNameHasError,\n      par: \"Please enter a first name.\",\n    },\n    {\n      className: lastNameClasses,\n      id: \"lname\",\n      type: \"text\",\n      value: lastNameValue,\n      content: \"Last Name\",\n      onChange: lastNameChangeHandler,\n      onBlur: lastNameBlurHandler,\n      hasError: lastNameHasError,\n      par: \"Please enter a last name.\",\n    },\n    {\n      className: emailClasses,\n      id: \"email\",\n      type: \"text\",\n      value: emailValue,\n      content: \"E-Mail Address\",\n      onChange: emailChangeHandler,\n      onBlur: emailBlurHandler,\n      hasError: emailHasError,\n      par: \"Please enter an email address.\",\n    },\n  ];\n\n  return {\n    inputData\n  }\n\n\n};\n\n"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,oBAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,UAAU,GAAIC,KAAD,IAAYA,KAAK,GAAGA,KAAK,CAACC,IAAN,OAAiB,EAApB,GAAyB,EAA7D;;EACAC,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAAC,EAAD,CAAtB;EAEA,MAAMK,KAAK,GAAG,0DAAd;;EACA,MAAMC,OAAO,GAAIL,KAAD,IAAWI,KAAK,CAACE,IAAN,CAAWN,KAAX,CAA3B;;EAEA,MAAM;IACJA,KAAK,EAAEO,cADH;IAEJC,OAAO,EAAEC,gBAFL;IAGJC,QAAQ,EAAEC,iBAHN;IAIJC,kBAAkB,EAAEC,sBAJhB;IAKJC,gBAAgB,EAAEC,oBALd;IAMJC,KAAK,EAAEC;EANH,IAOFrB,QAAQ,CAACG,UAAD,CAPZ;EAQAG,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACG,UAAD,CAApB;EAEA,MAAM;IACJC,KAAK,EAAEkB,aADH;IAEJV,OAAO,EAAEW,eAFL;IAGJT,QAAQ,EAAEU,gBAHN;IAIJR,kBAAkB,EAAES,qBAJhB;IAKJP,gBAAgB,EAAEQ,mBALd;IAMJN,KAAK,EAAEO;EANH,IAOF3B,QAAQ,CAACG,UAAD,CAPZ;EASA,MAAM;IACJC,KAAK,EAAEwB,UADH;IAEJhB,OAAO,EAAEiB,YAFL;IAGJf,QAAQ,EAAEgB,aAHN;IAIJd,kBAAkB,EAAEe,kBAJhB;IAKJb,gBAAgB,EAAEc,gBALd;IAMJZ,KAAK,EAAEa;EANH,IAOFjC,QAAQ,CAACS,OAAD,CAPZ,CA1B2B,CAmC7B;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;;EAEE,MAAMyB,gBAAgB,GAAGnB,iBAAiB,GACtC,sBADsC,GAEtC,cAFJ;EAGA,MAAMoB,eAAe,GAAGX,gBAAgB,GACpC,sBADoC,GAEpC,cAFJ;EAGA,MAAMY,YAAY,GAAGN,aAAa,GAAG,sBAAH,GAA4B,cAA9D;EAEA,MAAMO,SAAS,GAAG,CAChB;IACEC,SAAS,EAAEJ,gBADb;IAEEK,EAAE,EAAE,OAFN;IAGEC,IAAI,EAAE,MAHR;IAIEpC,KAAK,EAAEO,cAJT;IAKE8B,OAAO,EAAE,YALX;IAMEC,QAAQ,EAAEzB,sBANZ;IAOE0B,MAAM,EAAExB,oBAPV;IAQEL,QAAQ,EAAEC,iBARZ;IASE6B,GAAG,EAAE;EATP,CADgB,EAYhB;IACEN,SAAS,EAAEH,eADb;IAEEI,EAAE,EAAE,OAFN;IAGEC,IAAI,EAAE,MAHR;IAIEpC,KAAK,EAAEkB,aAJT;IAKEmB,OAAO,EAAE,WALX;IAMEC,QAAQ,EAAEjB,qBANZ;IAOEkB,MAAM,EAAEjB,mBAPV;IAQEZ,QAAQ,EAAEU,gBARZ;IASEoB,GAAG,EAAE;EATP,CAZgB,EAuBhB;IACEN,SAAS,EAAEF,YADb;IAEEG,EAAE,EAAE,OAFN;IAGEC,IAAI,EAAE,MAHR;IAIEpC,KAAK,EAAEwB,UAJT;IAKEa,OAAO,EAAE,gBALX;IAMEC,QAAQ,EAAEX,kBANZ;IAOEY,MAAM,EAAEX,gBAPV;IAQElB,QAAQ,EAAEgB,aARZ;IASEc,GAAG,EAAE;EATP,CAvBgB,CAAlB;EAoCA,OAAO;IACLP;EADK,CAAP;AAKD,CAxGD;;GAAMpC,S;UAcAD,Q,EACQA,Q,EASRA,Q,EASAA,Q;;;KAjCAC,S"},"metadata":{},"sourceType":"module"}
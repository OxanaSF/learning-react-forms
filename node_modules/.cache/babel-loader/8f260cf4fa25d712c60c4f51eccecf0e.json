{"ast":null,"code":"var _jsxFileName = \"/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = us;\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    //because we don't want the request to be sent yet (freeze the default behavior)\n    //so page won't be reloaded\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"VUm+G9YkVtHi/Fjk92HS4+x5TZ8=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","us","enteredNameIsValid","trim","nameInputIsInvalid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses"],"sources":["/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from 'react'\n\n\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('')\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n  const [formIsValid, setFormIsValid] = us\n\n  const enteredNameIsValid = enteredName.trim() !== ''\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value)\n\n   \n  }\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true)\n\n  }\n\n  const formSubmissionHandler = (event) => {\n    //because we don't want the request to be sent yet (freeze the default behavior)\n    //so page won't be reloaded\n    event.preventDefault()\n\n    setEnteredNameTouched(true)\n    if (!enteredNameIsValid) {\n      return\n    }\n    setEnteredName('')\n    setEnteredNameTouched(false)\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n          />\n          {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCC,EAAtC;EAEA,MAAMC,kBAAkB,GAAGP,WAAW,CAACQ,IAAZ,OAAuB,EAAlD;EACA,MAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBL,kBAAlD;;EAEA,MAAMQ,sBAAsB,GAAIC,KAAD,IAAW;IACxCV,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EAGD,CAJD;;EAMA,MAAMC,oBAAoB,GAAIH,KAAD,IAAW;IACtCR,qBAAqB,CAAC,IAAD,CAArB;EAED,CAHD;;EAKA,MAAMY,qBAAqB,GAAIJ,KAAD,IAAW;IACvC;IACA;IACAA,KAAK,CAACK,cAAN;IAEAb,qBAAqB,CAAC,IAAD,CAArB;;IACA,IAAI,CAACI,kBAAL,EAAyB;MACvB;IACD;;IACDN,cAAc,CAAC,EAAD,CAAd;IACAE,qBAAqB,CAAC,KAAD,CAArB;EACD,CAXD;;EAaA,MAAMc,gBAAgB,GAAGR,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;EAIA,oBACE;IAAM,QAAQ,EAAEM,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEE,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAEP,sBAHZ;QAIE,MAAM,EAAEI,oBAJV;QAKE,KAAK,EAAEd;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASKS,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAT3B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAtDD;;GAAMX,W;;KAAAA,W;AAwDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}
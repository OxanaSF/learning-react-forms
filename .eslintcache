[{"/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/index.js":"1","/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/App.js":"2","/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/SimpleInput.js":"3","/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/hooks/use-input.js":"4","/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/BasicForm.js":"5"},{"size":179,"mtime":1648643023000,"results":"6","hashOfConfig":"7"},{"size":162,"mtime":1654617592748,"results":"8","hashOfConfig":"7"},{"size":2277,"mtime":1654616749517,"results":"9","hashOfConfig":"7"},{"size":748,"mtime":1654614566033,"results":"10","hashOfConfig":"7"},{"size":3106,"mtime":1654621915246,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"xcills",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/index.js",[],["24","25"],"/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/App.js",[],"/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/SimpleInput.js",[],"/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/hooks/use-input.js",["26"],"import { useState } from \"react\";\n\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue)\n  const hasError = !valueIsValid && isTouched\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value)\n  }\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true)\n\n  }\n\n  const reset = () => {\n      setEnteredValue('')\n      setIsTouched(false)\n  }\n\n  return {\n      value: enteredValue, \n      isValid: valueIsValid,\n      hasError: hasError,\n      valueChangeHandler: valueChangeHandler,\n      inputBlurHandler: setIsTouched,\n      reset: reset\n  }\n};\n\nexport default useInput;\n","/Users/oxanahoward/Documents/BitwiseREACT/Projects/learning-react-forms/src/components/BasicForm.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":14,"column":9,"nodeType":"33","messageId":"34","endLine":14,"endColumn":25},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'inputBlurHandler' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]